searchState.loadedDescShard("zainodlib", 0, "Zaino Indexer service.\nZaino config.\nHold error types for the Indexer and related functionality.\nZingo-Indexer implementation.\nConfig information required for Zaino.\nPerforms checks on config data.\nReturns the argument unchanged.\nMinimum number of workers held in the workerpool when idle.\nCalls <code>U::from(self)</code>.\nLightWalletD listen port [DEPRECATED]. Used by …\nTcpIngestors listen port\nAttempts to load config data from a toml file at the …\nMaximum requests allowed in the request queue.\nMaximum workers allowed in the worker pool\nfull node Password.\nFull node Username.\nSets the TcpIngestor’s status.\nFull node / validator listen port.\nConfiguration errors.\nHTTP related errors due to invalid URI.\nZingo-Indexer errors.\nJSON RPC connector errors.\nCustom indexor errors.\nServer based errors.\nReturned from tokio joinhandles..\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nZingo-Indexer.\nHolds the status of the server and all its components.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the IndexerStatus.\nCreates a new IndexerStatus.\nSets the servers to close gracefully.\nStarts Indexer service.\nLaunches an Indexer service.\nReturns the indexers current status usize.\nReturns the status of the indexer and its parts.\nReturns the indexers current statustype.")